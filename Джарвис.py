from –ö–Ω–æ–ø–∫–∏ import kb1
from aiogram import Bot, Dispatcher, types, F, Router
import asyncio
import adress
import logging
from aiogram.filters.command import Command
import datetime
from photo2 import fox
history = []


n = fox()
use_token = adress.token
logging.basicConfig(level=logging.INFO)
bot = Bot(token = use_token)
dp = Dispatcher()
router = Router()


@dp.message(Command('start'))
async def command_start(message: types.Message):
    m = message.message_id
    await message.chat.delete_message(m)
    await message.answer('–ü—Ä–∏–≤–µ—Ç –≤—Å–µ–ºüòÑ')
    await message.answer('–ß—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –∫–æ–º–∞–Ω–¥—ã –≤–≤–µ–¥–∏ –∫–æ–º–∞–Ω–¥—É:/–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è')
@dp.message(Command('–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è'))
async def command_start(message: types.Message):
    await message.answer('–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è:')
    await message.answer('/–ü–∏–≤–µ—Ç - –î–∂–∞—Ä–≤–∏—Å_—á–∞—Ç –ø–æ–ø—Ä–µ–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –≤–∞—Å.')
    await message.answer('/–°–µ–π—á–∞—Å - –î–∂–∞—Ä–≤–∏—Å_—á–∞—Ç –≤—ã–≤–æ–¥–∏—Ç –≤—Ä–µ–º—è –∏ –¥–∞—Ç—É.')
    await message.answer('/–õ–∏—Å–∞ - –î–∂–∞—Ä–≤–∏—Å_—á–∞—Ç –≤—ã–≤–µ–¥–∏—Ç —Ñ–æ—Ç–æ –ª–∏—Å—ã –∏–ª–∏ –ª–∏—Å.')
    await message.answer('/–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ - –î–∂–∞—Ä–≤–∏—Å_—á–∞—Ç –≤—ã–≤–æ–¥–∏—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —á–∞—Ç–∞.')
    await message.answer('–í–Ω–∏–º–∞–Ω–∏–µ! - –î–∂–∞—Ä–≤–∏—Å_—á–∞—Ç –∏–º–µ–µ—Ç —Ü–µ–Ω–∑—É—Ä-—Ñ—É–Ω–∫—Ü–∏—é.')


@dp.message(Command('–ü—Ä–∏–≤–µ—Ç'))
async def command_start(message: types.Message):
    await message.answer(f'–ü—Ä–∏–≤–µ—Ç {message.from_user.first_name}!‚úã')
@dp.message(Command('–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞'))
async def command_start(message: types.Message):
    await message.answer(text = '–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞:',reply_markup=kb1)
@dp.callback_query(F.data == '–ü—Ä–∏–≤–µ—Ç')
async def kb(callback: types.CallbackQuery):
    await callback.message.answer(f'–ü—Ä–∏–≤–µ—Ç!‚úã')
@dp.callback_query(F.data == '–°–µ–π—á–∞—Å')
async def kb(callback: types.CallbackQuery):
    dt = datetime.datetime.now()
    await callback.message.answer(f'–°–µ–π—á–∞—Å{dt}üïì')




@dp.message(Command('–°–µ–π—á–∞—Å'))
async def command_start(message: types.Message):
    dt = datetime.datetime.now()
    await  message.answer(f'–°–µ–π—á–∞—Å{dt}üïì')
@dp.message(Command('8_–º–∞—Ä—Ç–∞'))
async def command_start(message: types.Message):
    await  message.answer("–° 8 –º–∞—Ä—Ç–∞!üéâ")
    await message.answer("üíê")
@dp.message(Command('–ò—Å—Ç–æ—Ä–∏—è'))
async def command_start(message: types.Message):
    m = message.message_id
    await message.chat.delete_message(m)
    await message.answer(f"{history}")
@dp.message(Command('–õ–∏—Å–∞'))
async def command_start(message: types.Message):
    n = fox()
    await bot.send_photo(message.chat.id, n)
@dp.message(F.text)
async def command_start(message: types.Message):
    user_message = message.text
    who = message.from_user.username
    history.append(user_message)
    print(f'{who}:{user_message}')
    if '–î—É—Ä–∞–∫' in message.text:
        m = message.message_id
        await message.chat.delete_message(m)
        await message.answer("–ù–µ —Ä—É–≥–∞–π—Å—è!")
    elif '–¥—É—Ä–∞–∫' in message.text:
        m = message.message_id
        await message.chat.delete_message(m)
        await message.answer("–ù–µ —Ä—É–≥–∞–π—Å—è!")
    elif '–î—É—Ä–∞' in message.text:
        m = message.message_id
        await message.chat.delete_message(m)
        await message.answer("–ù–µ —Ä—É–≥–∞–π—Å—è!")
    elif '–¥—É—Ä–∞' in message.text:
        m = message.message_id
        await message.chat.delete_message(m)
        await message.answer("–ù–µ —Ä—É–≥–∞–π—Å—è!")
    elif '–¥–µ–±–∏–ª' in message.text:
        m = message.message_id
        await bot.ban_chat_member(chat_id=-1002236134027, user_id=message.from_user.id)
        await message.chat.delete_message(m)
        await message.answer("–ù–µ —Ä—É–≥–∞–π—Å—è!")
    elif '–î–µ–±–∏–ª' in message.text:
        m = message.message_id
        await bot.ban_chat_member(chat_id=-1002236134027, user_id=message.from_user.id)
        await message.chat.delete_message(m)
        await message.answer("–ù–µ —Ä—É–≥–∞–π—Å—è!")
    elif '–∏–¥–∏–æ—Ç' in message.text:
        m = message.message_id
        await bot.ban_chat_member(chat_id=-1002236134027, user_id=message.from_user.id)
        await message.chat.delete_message(m)
        await message.answer("–ù–µ —Ä—É–≥–∞–π—Å—è!")
    elif '–ò–¥–∏–æ—Ç' in message.text:
        m = message.message_id
        await bot.ban_chat_member(chat_id=-1002236134027, user_id=message.from_user.id)
        await message.chat.delete_message(m)
        await message.answer("–ù–µ —Ä—É–≥–∞–π—Å—è!")
    elif '–î—É–±–∏–Ω–∞' in message.text:
        m = message.message_id
        await message.chat.delete_message(m)
        await message.answer("–ù–µ —Ä—É–≥–∞–π—Å—è!")
    elif '–¥—É–±–∏–Ω–∞' in message.text:
        m = message.message_id
        await message.chat.delete_message(m)
        await message.answer("–ù–µ —Ä—É–≥–∞–π—Å—è!")
    elif '–¢—É–ø–æ–π' in message.text:
        m = message.message_id
        await bot.ban_chat_member(chat_id=-1002236134027, user_id=message.from_user.id)
        await message.chat.delete_message(m)
        await message.answer("–ù–µ —Ä—É–≥–∞–π—Å—è!")
    elif '—Ç—É–ø–æ–π' in message.text:
        m = message.message_id
        await bot.ban_chat_member(chat_id=-1002236134027, user_id=message.from_user.id)
        await message.chat.delete_message(m)
        await message.answer("–ù–µ —Ä—É–≥–∞–π—Å—è!")
    elif '–¢—É–ø–∞—è' in message.text:
        m = message.message_id
        await bot.ban_chat_member(chat_id=-1002236134027, user_id=message.from_user.id)
        await message.chat.delete_message(m)
        await message.answer("–ù–µ —Ä—É–≥–∞–π—Å—è!")
    elif '—Ç—É–ø–∞—è' in message.text:
        m = message.message_id
        await bot.ban_chat_member(chat_id=-1002236134027, user_id=message.from_user.id)
        await message.chat.delete_message(m)
        await message.answer("–ù–µ —Ä—É–≥–∞–π—Å—è!")
















async def main():
    await dp.start_polling(bot)
if __name__ == '__main__':
    asyncio.run(main())


